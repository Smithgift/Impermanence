{"changed":true,"filter":false,"title":"impermanence.js","tooltip":"/frontend2/impermanence.js","value":"var currentSystemName;\nvar currentSystemHash;\nvar currentSystem;\nvar focusedSector = {};\nvar selectedShip = [];\nvar refreshFilter;\n\nvar mapLegend = [\n    [\"&nbsp;\", \"Empty Space\"],    //Empty,\n    [\"a\", \"Kaboomium Asteriod\"],    //AtkAsteriod,\n    [\"d\", \"Bouncium Asteriod\"],    //DefAsteriod,\n    [\"e\", \"Zoomium Asteriod\"],    //EngAsteriod,\n    [\"A\", \"Ancient Monolith of Victory\"],    //AtkMonolith,\n    [\"D\", \"Ancient Monolith of Barriers\"],    //DefMonolith,\n    [\"E\", \"Ancient Monolith of Travel\"],    //EngMonolith,\n    [\"U\", \"Unobtainium Rift\"],    //UnobRift,\n    [\"#\", \"Obliteration Ray Factory\"],    //AtkGreatMachine,\n    [\")\", \"S.H.I.E.L.D.\"],    //DefGreatMachine,\n    [\"0\", \"Omnigate\"],    //EngGreatMachine,\n    [\"o\", \"Inhabited Planet\"],    //Planet,\n    [\"O\", \"Sun\"],    //Sun,\n    [\"*\", \"Wormhole\"],    //Wormhole,\n    [\"^\", \"Ascension Gate\"]     //AscensionGate\n]\n\nfunction setSystem(name) {\n    currentSystemName = name;\n    $(\"#title\").text(currentSystemName);\n    $(\"#screen\").empty();\n    // For whatever reason, web3.sha3 does not start with a 0x. This leads to\n    // attempts to reuse that hash to break.\n    currentSystemHash = \"0x\" + web3.sha3(name);\n    currentSystem = galaxy.galacticMap(currentSystemHash);\n    if(!currentSystem[1]) {\n        console.log(\"no system found.\");\n        $(\"#screen\").text(\"No system by that name, want to create one?\");\n        var button = document.createElement(\"input\");\n        button.type = \"button\";\n        button.onclick = function () {\n            //galaxy.addSystem(name, function() {\n                // TODO: Refresh.\n                //setTimeout(\"setSystem(name)\", 1000);\n            //});\n            createSystem(name, setSystem);\n            $(\"#screen\").append(\"<br /> System under construction!\")\n        };\n        button.value = \"YES!!!\";\n        $(\"#screen\").append(button)\n    } else {\n        var systemMap = document.createElement(\"table\");\n        systemMap.id = \"map\";\n        $(\"#screen\").append(systemMap);\n        for(var y = 0; y < 15; y ++) {\n            var row = document.createElement(\"tr\");\n            $(systemMap).append(row);\n            for(var x = 0; x < 15; x++) {\n                var cell = document.createElement(\"td\");\n                cell.id = x.toString(16) + y.toString(16);\n                $(cell).text(\"?\");\n                $(cell).click(focusSector)\n                var setCell;\n                setCell = function(err, result) {\n                    if(err) {\n                        console.log(err);\n                        setTimeout(function() {\n                            galaxy.getSectorType(currentSystemHash, this.x, this.y, {}, setCell.bind(this));\n                        }.bind(this), 1000);\n                    } else {\n                        this.cell.html(mapLegend[result][0]);\n                        console.log(this.x, this.y, result);\n                    }\n                }\n                galaxy.getSectorType(currentSystemHash, x, y, {}, setCell.bind({\n                    cell: $(cell),\n                    x: x,\n                    y: y\n                }));\n                $(row).append(cell);\n            } \n        }\n        focusedSector = {};\n        var focus = document.createElement(\"div\");\n        focus.id = \"focus\";\n        $(\"#screen\").append(focus);\n        $(focus).text(\"Click on a sector for more details.\");\n    }\n}\n\nfunction parseID(id) {\n    return [parseInt(id[0], 16), parseInt(id[1], 16)]\n}\n\nfunction focusSector(event) {\n    if(focusedSector.td)\n        $(focusedSector.td).removeClass(\"selected\");\n    focusedSector = {};\n    console.log(this);\n    focusedSector.td = this;\n    var coords = parseID(this.id);\n    focusedSector.x = coords[0];\n    focusedSector.y = coords[1];\n    focusedSector.st = galaxy.getSectorType(\n        currentSystemHash, \n        focusedSector.x, \n        focusedSector.y\n    );\n    var watchSector = (function() {\n        refreshFilter = galaxy.shipActivity({\n            system: currentSystemHash,\n            x: focusedSector.x,\n            y: focusedSector.y\n        });\n        refreshFilter.watch(function() {\n            console.log(\"I'm being called, at least :(.\");\n            focusSector.bind(this)(event);\n        }.bind(this));\n    }).bind(this);\n    if(!refreshFilter) {\n        watchSector();\n    } else {\n        refreshFilter.stopWatching();\n        watchSector();\n    }\n    $(this).addClass(\"selected\");\n    $(\"#focus\").empty();\n    $(\"#focus\").append(mapLegend[focusedSector.st][1] + \" at \" + focusedSector.x + \", \" + focusedSector.y);\n    $(\"#focus\").append(\"<br />\");\n    //$(\"#focus\").append( + \"<br />\");\n    // Hack to find sector type.\n    if(mapLegend[focusedSector.st][0] == \"o\") { // Planet.\n        var craneName = document.createElement(\"input\");\n        $(\"#focus\").append(craneName);\n        var button = document.createElement(\"input\");\n        button.type = \"button\";\n        button.onclick = function() {\n            console.log($(craneName).val());\n            galaxy.spawnCrane(\n                currentSystemHash, \n                focusedSector.x, \n                focusedSector.y,\n                $(craneName).val()\n            );\n        };\n        button.value = \"Construct CRaNE!\";\n        $(\"#focus\").append(button);        \n    } else if(mapLegend[focusedSector.st][0] == \"*\") { // Wormhole.\n        focusedSector.destination = galaxy.getWormhole(\n            currentSystemHash, \n            focusedSector.x,\n            focusedSector.y\n        );\n        focusedSector.destinationName = galaxy.galacticMap(\n            focusedSector.destination\n        )[0]\n        $(\"#focus\").append(\"A womhole to \" + focusedSector.destinationName + \"!\");\n        $(\"#focus\").append(\"<br />\");\n        var button = document.createElement(\"input\");\n        button.type = \"button\";\n        button.onclick = function() {\n            setSystem(focusedSector.destinationName);\n        };\n        button.value = \"Go to system!\";\n        $(\"#focus\").append(button)\n    }\n    if(galaxy.getSectorShipsLength(\n            currentSystemHash, \n            focusedSector.x, \n            focusedSector.y).toNumber() > 0) {\n        $(\"#focus\").append(\"<br />\");\n        $(\"#focus\").append(\"Ships Present: <br />\");\n        var shipTable = document.createElement(\"table\");\n        shipTable.id = \"ship_table\";\n        $(\"#focus\").append(shipTable);\n        $(shipTable).append(\"<tr><td>Name:</td><td>Owner:</td><td>A</td><td>D</td><td>E</td><td>HP</td><td>MR</td><td>ENERGY</td>\")\n        var shipSelect = document.createElement(\"select\");\n        shipSelect.id = \"ship_select\";\n        $(\"#focus\").append(shipSelect);\n        focusedSector.ships = {};\n        getSectorShips(\n            currentSystemHash,\n            focusedSector.x,\n            focusedSector.y,\n            focusedSector.ships,\n            shipTable,\n            shipSelect\n        )\n        $(shipSelect).change(function(event) {\n            selectShip(focusedSector.ships[$(this).val()]);\n        })\n        var shipDiv = document.createElement(\"div\");\n        shipDiv.id = \"ship_div\";\n        $(\"#focus\").append(shipDiv);\n    } else {\n        $(\"#focus\").append(\"No ships detected.\");\n    }\n}\n\nfunction getSectorShips(systemHash, x, y, shipList, shipTable, shipSelect)\n{\n    for(var i = 0; i < galaxy.getSectorShipsLength(systemHash, x, y); i++) {\n        galaxy.getSectorShip(systemHash, x, y, i, function(err, result) {\n            if(err) {\n                console.log(\"Oh dear, we couldn't get a ship. Probably should fix this.\");\n                throw err;\n            }\n            var ship = [result];\n            galaxy.shipRegistry(ship[0], function(err, result) {\n                ship.push(result);\n                if(ship[1][0]) {\n                    shipList[ship[0]] = ship;\n                    if(!(typeof shipTable === \"undefined\")) {\n                        var row = document.createElement(\"tr\");\n                        [12, 5, 7, 8, 9, 10, 11, 4].forEach(function (col) {\n                            var colTD = document.createElement(\"td\");\n                            $(colTD).text(ship[1][col].toString());\n                            $(row).append(colTD);\n                        });\n                        ship.hold = getShipHold(ship[0]);\n                        var itemStr = \"\";\n                        Object.keys(ship.hold).forEach(function(entry) {\n                            itemStr += entry + \": \" + hold[entry];  \n                        });\n                        if(itemStr)\n                            $(row).append(\"<td>\" + itemStr + \"</td>\");\n                        $(shipTable).append(row);\n                    }\n                    if(!(typeof shipSelect === \"undefined\")) {\n                        var option = document.createElement(\"option\");\n                        option.value = ship[0];\n                        $(option).text(ship[1][12]);\n                        $(shipSelect).append(option);\n                        $(shipSelect).change();\n                    }\n                }\n            });\n        });\n    }\n}\n\nfunction getShipHold(_shipID) {\n    cargoList = {}\n    var i = 0; // Manual iteration in a for loop. Take that, elegance!\n    [\"a\", \"d\", \"e\", \"A\", \"D\", \"E\", \"U\"].forEach(function(entry) {\n        var cargo = galaxy.getShipCargo(_shipID, i++)\n        if(cargo.toNumber())\n            cargoList[entry] = cargo;\n    });\n    return cargoList;\n}\n\nfunction selectShip(ship) {\n    if(web3.eth.accounts.indexOf(ship[1][5]) == -1) {\n        $(\"#ship_div\").text(\"You don't seem to own this ship.\");\n    } else {\n        $(\"#ship_div\").empty();\n        var move_btn = document.createElement(\"input\");\n        move_btn.type = \"button\";\n        move_btn.value = \"Launch!\"\n        $(move_btn).click(function(event) {\n            $(\"#ship_div\").text(\"Click on your destination sector!\");\n            function moveTo(event) {\n                $(\"body\").off(\"click\", \"#map tr td\", moveTo);\n                var coords = parseID(this.id);\n                console.log(ship[1][5]);\n                var action = new Action(\n                    impulse, \n                    [ship[0], coords[0], coords[1], ship[1][5]], \n                    getDistance([ship[1][2].toNumber(), ship[1][3].toNumber()], coords)\n                );\n                action.act();\n            }\n            $(\"body\").on(\"click\", \"#map tr td\", moveTo);\n        })\n        $(\"#ship_div\").append(move_btn);\n        if(mapLegend[focusedSector.st][0] == \"*\") {\n            var jmp_btn = document.createElement(\"input\");\n            jmp_btn.type = \"button\";\n            jmp_btn.value = \"Enter wormhole!\";\n            $(jmp_btn).click(function(event) {\n                $(\"#ship_div\").text(\"INITIATING JUMP SEQUENCE!\");\n                var action = new Action(\n                    jump,\n                    [ship[0], focusedSector.destination, ship[1][5]],\n                    1\n                );\n                action.act();\n            });\n            $(\"#ship_div\").append(jmp_btn);\n        }\n        if((focusedSector.st > 0) && (focusedSector.st < 8)) {\n            var mine_btn = document.createElement(\"input\");\n            mine_btn.type = \"button\";\n            mine_btn.value = \"Mine resources!\";\n            $(mine_btn).click(function(event) {\n                $(\"#ship_div\").text(\"Beginning prospecting!\");\n                var action = new Action(\n                    mine,\n                    [ship[0], ship[1][5]],\n                    8\n                );\n                // And they say tables are bad in HTML...\n                var difficulty = [-1, 16, 16, 16, 256, 256, 256, 32][focusedSector.st];\n                action.condition = function() {\n                    if(!Action.prototype.condition.call(this))\n                        return false;\n                    console.log(\"Prospecting.\")\n                    return galaxy.canMine(this.shipID, difficulty);\n                }\n                action.act();\n            });\n            $(\"#ship_div\").append(mine_btn);\n        }\n        if((focusedSector.st > 0) && (focusedSector.st < 8)) {\n            var upgrade_btn = document.createElement(\"input\");\n            upgrade_btn.type = \"button\";\n            mine_btn.value = \"Mine resources!\";\n            $(mine_btn).click(function(event) {\n                $(\"#ship_div\").text(\"Beginning prospecting!\");\n                var action = new Action(\n                    mine,\n                    [ship[0], ship[1][5]],\n                    8\n                );\n                // And they say tables are bad in HTML...\n                var difficulty = [-1, 16, 16, 16, 256, 256, 256, 32][focusedSector.st];\n                action.condition = function() {\n                    if(!Action.prototype.condition.call(this))\n                        return false;\n                    console.log(\"Prospecting.\")\n                    return galaxy.canMine(this.shipID, difficulty);\n                }\n                action.act();\n            });\n            $(\"#ship_div\").append(mine_btn);\n        }\n    }\n}\n\nfunction getDistance(coordsa, coordsb) {\n    return 1; // Until solidity is unbroken.\n    var distance = 0;\n    distance += Math.abs(coordsa[0] - coordsb[0]);\n    distance += Math.abs(coordsa[1] - coordsb[1]);\n    return distance;\n}\n\n// Lo! in the middle of the hackathon I feel the urge to implement a\n// decorator.\n// By which I mean class.\nfunction Action(f, args, effort) {\n    this.f = f;\n    this.args = args;\n    this.shipID = this.args[0];\n    this.effort = effort;\n    this.massRatio = galaxy.shipRegistry(this.shipID)[11];\n}\n\nAction.prototype.condition = function() {\n    var energy = galaxy.getShipEnergy(this.shipID).toNumber() \n    if(energy >= (this.massRatio * this.effort)) {\n        console.log(\"Condition met:\", energy, (this.massRatio.toNumber() * this.effort));\n        return true;\n    } else {\n        console.log(\"Condition not met:\", energy, (this.massRatio.toNumber() * this.effort));\n        return false;\n    }\n}\n\nAction.prototype.act = function() {\n        var origThis = this;\n        var origArg = this.args;\n        var attempt = function() {\n            try {\n                this.f.apply(origThis, origArg);\n            } catch(err) {\n                console.log(\"Attempt failed:\", err.toString());\n                // Hack! Let's just keep trying until it works.\n                setTimeout(attempt, 1000);\n            }\n        }.bind(this);\n        if(this.condition()) {\n            //console.log(\"Sufficient Energy\", galaxy.getShipEnergy(shipID));\n            attempt();\n        } else {\n            //console.log(\"Insufficient Energy\", galaxy.getShipEnergy(shipID).toNumber());\n            this.waitFilter = web3.eth.filter(\"latest\");\n            this.waitFilter.watch(function() {\n                if(this.condition()) {\n                    this.waitFilter.stopWatching();\n                    attempt();\n                }\n                //console.log(\"Energy still insufficient\", galaxy.getShipEnergy(shipID).toNumber());\n            }.bind(this));\n        }\n}\n\nfunction impulse(shipID, x, y, owner) {\n    console.log(\"Impulse move\", shipID, x, y, owner);\n    var tx = galaxy.impulse(shipID, x, y, {from: owner});\n    console.log(\"Impulse done.\", tx);\n}\n\nfunction jump(shipID, destination, owner) {\n    // We must get the hint first.\n    // By brute force, apparently.\n    for(var x = 0; x < 15; x++) {\n        for(var y = 0; y < 15; y++) {\n            if(galaxy.getWormhole(\n                currentSystemHash, \n                focusedSector.x,\n                focusedSector.y\n            ) == destination) {\n                var hint = galaxy.compressCoords([x, y]);\n                console.log(\"ATTEMPTING JUMP!\", destination, hint, x, y);\n                galaxy.jump(shipID, hint);\n                return;\n            }\n        }\n    }\n    console.log(\"No matching wormhole found. :(\");\n}\n\nfunction mine(shipID, owner) {\n    console.log(\"MINE! MINE! MINE!\", shipID);\n    tx = galaxy.mine(shipID); // That was easy.\n    console.log(\"THIS TRANSACTION IS MINE!\", tx);\n    setTimeout(ctx, 1000)\n}\n\nfunction ctx() {\n    return web3.eth.getTransactionReceipt(tx);\n}\n\nfunction createSystem(name, callback) {\n    galaxy.addSystem(name);\n    var systemCreated = galaxy.systemAdded({'_systemHash': currentSystemHash});\n    systemCreated.watch(function(err, result) {\n        if(err) console.log(err);\n        else {\n            systemCreated.stopWatching();\n            callback(name);\n        }\n    });\n}","undoManager":{"mark":78,"position":100,"stack":[[{"start":{"row":406,"column":25},"end":{"row":406,"column":26},"action":"insert","lines":["a"],"id":15024}],[{"start":{"row":406,"column":26},"end":{"row":406,"column":27},"action":"insert","lines":["n"],"id":15025}],[{"start":{"row":406,"column":27},"end":{"row":406,"column":28},"action":"insert","lines":["s"],"id":15026}],[{"start":{"row":406,"column":28},"end":{"row":406,"column":29},"action":"insert","lines":["a"],"id":15027}],[{"start":{"row":406,"column":29},"end":{"row":406,"column":30},"action":"insert","lines":["c"],"id":15028}],[{"start":{"row":406,"column":30},"end":{"row":406,"column":31},"action":"insert","lines":["t"],"id":15029},{"start":{"row":406,"column":31},"end":{"row":406,"column":32},"action":"insert","lines":["i"]},{"start":{"row":406,"column":32},"end":{"row":406,"column":33},"action":"insert","lines":["o"]},{"start":{"row":406,"column":33},"end":{"row":406,"column":34},"action":"insert","lines":["n"]}],[{"start":{"row":406,"column":34},"end":{"row":406,"column":35},"action":"insert","lines":["R"],"id":15030}],[{"start":{"row":406,"column":35},"end":{"row":406,"column":36},"action":"insert","lines":["E"],"id":15031}],[{"start":{"row":406,"column":36},"end":{"row":406,"column":37},"action":"insert","lines":["c"],"id":15032}],[{"start":{"row":406,"column":37},"end":{"row":406,"column":38},"action":"insert","lines":["e"],"id":15033},{"start":{"row":406,"column":38},"end":{"row":406,"column":39},"action":"insert","lines":["i"]}],[{"start":{"row":406,"column":38},"end":{"row":406,"column":39},"action":"remove","lines":["i"],"id":15034}],[{"start":{"row":406,"column":37},"end":{"row":406,"column":38},"action":"remove","lines":["e"],"id":15035}],[{"start":{"row":406,"column":36},"end":{"row":406,"column":37},"action":"remove","lines":["c"],"id":15036}],[{"start":{"row":406,"column":35},"end":{"row":406,"column":36},"action":"remove","lines":["E"],"id":15037},{"start":{"row":406,"column":35},"end":{"row":406,"column":36},"action":"insert","lines":["e"]}],[{"start":{"row":406,"column":36},"end":{"row":406,"column":37},"action":"insert","lines":["c"],"id":15038}],[{"start":{"row":406,"column":37},"end":{"row":406,"column":38},"action":"insert","lines":["e"],"id":15039},{"start":{"row":406,"column":38},"end":{"row":406,"column":39},"action":"insert","lines":["i"]}],[{"start":{"row":406,"column":39},"end":{"row":406,"column":40},"action":"insert","lines":["p"],"id":15040}],[{"start":{"row":406,"column":40},"end":{"row":406,"column":41},"action":"insert","lines":["t"],"id":15041}],[{"start":{"row":406,"column":41},"end":{"row":406,"column":43},"action":"insert","lines":["()"],"id":15042}],[{"start":{"row":406,"column":42},"end":{"row":406,"column":43},"action":"insert","lines":["t"],"id":15043}],[{"start":{"row":406,"column":43},"end":{"row":406,"column":44},"action":"insert","lines":["x"],"id":15044}],[{"start":{"row":406,"column":45},"end":{"row":406,"column":46},"action":"insert","lines":[";"],"id":15045}],[{"start":{"row":402,"column":49},"end":{"row":403,"column":0},"action":"insert","lines":["",""],"id":15046},{"start":{"row":403,"column":0},"end":{"row":403,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":403,"column":0},"end":{"row":403,"column":4},"action":"remove","lines":["    "],"id":15047}],[{"start":{"row":403,"column":0},"end":{"row":403,"column":4},"action":"insert","lines":["    "],"id":15048}],[{"start":{"row":403,"column":4},"end":{"row":403,"column":5},"action":"insert","lines":["c"],"id":15049}],[{"start":{"row":403,"column":5},"end":{"row":403,"column":6},"action":"insert","lines":["t"],"id":15050}],[{"start":{"row":403,"column":6},"end":{"row":403,"column":7},"action":"insert","lines":["x"],"id":15051}],[{"start":{"row":403,"column":7},"end":{"row":403,"column":9},"action":"insert","lines":["()"],"id":15052}],[{"start":{"row":403,"column":9},"end":{"row":403,"column":10},"action":"insert","lines":[";"],"id":15053}],[{"start":{"row":403,"column":4},"end":{"row":403,"column":5},"action":"insert","lines":["c"],"id":15054}],[{"start":{"row":403,"column":5},"end":{"row":403,"column":6},"action":"insert","lines":["o"],"id":15055}],[{"start":{"row":403,"column":6},"end":{"row":403,"column":7},"action":"insert","lines":["n"],"id":15056}],[{"start":{"row":403,"column":7},"end":{"row":403,"column":8},"action":"insert","lines":["s"],"id":15057}],[{"start":{"row":403,"column":8},"end":{"row":403,"column":9},"action":"insert","lines":["o"],"id":15058}],[{"start":{"row":403,"column":9},"end":{"row":403,"column":10},"action":"insert","lines":["l"],"id":15059}],[{"start":{"row":403,"column":10},"end":{"row":403,"column":11},"action":"insert","lines":["e"],"id":15060}],[{"start":{"row":403,"column":11},"end":{"row":403,"column":12},"action":"insert","lines":["."],"id":15061}],[{"start":{"row":403,"column":12},"end":{"row":403,"column":13},"action":"insert","lines":["l"],"id":15062}],[{"start":{"row":403,"column":13},"end":{"row":403,"column":14},"action":"insert","lines":["o"],"id":15063}],[{"start":{"row":403,"column":14},"end":{"row":403,"column":15},"action":"insert","lines":["g"],"id":15064}],[{"start":{"row":403,"column":15},"end":{"row":403,"column":16},"action":"insert","lines":["("],"id":15065}],[{"start":{"row":403,"column":21},"end":{"row":403,"column":22},"action":"insert","lines":[")"],"id":15066}],[{"start":{"row":403,"column":21},"end":{"row":403,"column":22},"action":"remove","lines":[")"],"id":15067}],[{"start":{"row":403,"column":0},"end":{"row":404,"column":0},"action":"remove","lines":["    console.log(ctx();",""],"id":15068}],[{"start":{"row":402,"column":49},"end":{"row":403,"column":0},"action":"insert","lines":["",""],"id":15069},{"start":{"row":403,"column":0},"end":{"row":403,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":403,"column":4},"end":{"row":403,"column":5},"action":"insert","lines":["s"],"id":15070}],[{"start":{"row":403,"column":5},"end":{"row":403,"column":6},"action":"insert","lines":["e"],"id":15071}],[{"start":{"row":403,"column":6},"end":{"row":403,"column":7},"action":"insert","lines":["t"],"id":15072}],[{"start":{"row":403,"column":7},"end":{"row":403,"column":8},"action":"insert","lines":["T"],"id":15073}],[{"start":{"row":403,"column":8},"end":{"row":403,"column":9},"action":"insert","lines":["i"],"id":15074}],[{"start":{"row":403,"column":9},"end":{"row":403,"column":10},"action":"insert","lines":["m"],"id":15075}],[{"start":{"row":403,"column":10},"end":{"row":403,"column":11},"action":"insert","lines":["e"],"id":15076}],[{"start":{"row":403,"column":11},"end":{"row":403,"column":12},"action":"insert","lines":["o"],"id":15077}],[{"start":{"row":403,"column":12},"end":{"row":403,"column":13},"action":"insert","lines":["u"],"id":15078}],[{"start":{"row":403,"column":13},"end":{"row":403,"column":14},"action":"insert","lines":["t"],"id":15079}],[{"start":{"row":403,"column":14},"end":{"row":403,"column":16},"action":"insert","lines":["()"],"id":15080}],[{"start":{"row":403,"column":15},"end":{"row":403,"column":16},"action":"insert","lines":["c"],"id":15081}],[{"start":{"row":403,"column":16},"end":{"row":403,"column":17},"action":"insert","lines":["t"],"id":15082}],[{"start":{"row":403,"column":17},"end":{"row":403,"column":18},"action":"insert","lines":["x"],"id":15083}],[{"start":{"row":403,"column":18},"end":{"row":403,"column":19},"action":"insert","lines":[","],"id":15084}],[{"start":{"row":403,"column":19},"end":{"row":403,"column":20},"action":"insert","lines":[" "],"id":15085}],[{"start":{"row":403,"column":20},"end":{"row":403,"column":21},"action":"insert","lines":["1"],"id":15086}],[{"start":{"row":403,"column":21},"end":{"row":403,"column":22},"action":"insert","lines":["0"],"id":15087}],[{"start":{"row":403,"column":22},"end":{"row":403,"column":23},"action":"insert","lines":["0"],"id":15088}],[{"start":{"row":403,"column":23},"end":{"row":403,"column":24},"action":"insert","lines":["0"],"id":15089}],[{"start":{"row":312,"column":0},"end":{"row":313,"column":0},"action":"insert","lines":["",""],"id":15090}],[{"start":{"row":312,"column":0},"end":{"row":334,"column":9},"action":"insert","lines":["        if((focusedSector.st > 0) && (focusedSector.st < 8)) {","            var mine_btn = document.createElement(\"input\");","            mine_btn.type = \"button\";","            mine_btn.value = \"Mine resources!\";","            $(mine_btn).click(function(event) {","                $(\"#ship_div\").text(\"Beginning prospecting!\");","                var action = new Action(","                    mine,","                    [ship[0], ship[1][5]],","                    8","                );","                // And they say tables are bad in HTML...","                var difficulty = [-1, 16, 16, 16, 256, 256, 256, 32][focusedSector.st];","                action.condition = function() {","                    if(!Action.prototype.condition.call(this))","                        return false;","                    console.log(\"Prospecting.\")","                    return galaxy.canMine(this.shipID, difficulty);","                }","                action.act();","            });","            $(\"#ship_div\").append(mine_btn);","        }"],"id":15091}],[{"start":{"row":217,"column":24},"end":{"row":217,"column":25},"action":"insert","lines":["s"],"id":15092}],[{"start":{"row":217,"column":25},"end":{"row":217,"column":26},"action":"insert","lines":["h"],"id":15093}],[{"start":{"row":217,"column":26},"end":{"row":217,"column":27},"action":"insert","lines":["i"],"id":15094}],[{"start":{"row":217,"column":27},"end":{"row":217,"column":28},"action":"insert","lines":["p"],"id":15095}],[{"start":{"row":217,"column":28},"end":{"row":217,"column":29},"action":"insert","lines":["."],"id":15096}],[{"start":{"row":219,"column":36},"end":{"row":219,"column":37},"action":"insert","lines":["s"],"id":15097}],[{"start":{"row":219,"column":37},"end":{"row":219,"column":38},"action":"insert","lines":["h"],"id":15098}],[{"start":{"row":219,"column":38},"end":{"row":219,"column":39},"action":"insert","lines":["i"],"id":15099}],[{"start":{"row":219,"column":39},"end":{"row":219,"column":40},"action":"insert","lines":["p"],"id":15100}],[{"start":{"row":219,"column":40},"end":{"row":219,"column":41},"action":"insert","lines":["."],"id":15101}],[{"start":{"row":207,"column":34},"end":{"row":207,"column":35},"action":"remove","lines":[" "],"id":15102}],[{"start":{"row":313,"column":19},"end":{"row":313,"column":20},"action":"remove","lines":["e"],"id":15103}],[{"start":{"row":313,"column":18},"end":{"row":313,"column":19},"action":"remove","lines":["n"],"id":15104}],[{"start":{"row":313,"column":17},"end":{"row":313,"column":18},"action":"remove","lines":["i"],"id":15105}],[{"start":{"row":313,"column":16},"end":{"row":313,"column":17},"action":"remove","lines":["m"],"id":15106}],[{"start":{"row":313,"column":16},"end":{"row":313,"column":17},"action":"insert","lines":["u"],"id":15107}],[{"start":{"row":313,"column":17},"end":{"row":313,"column":18},"action":"insert","lines":["p"],"id":15108}],[{"start":{"row":313,"column":18},"end":{"row":313,"column":19},"action":"insert","lines":["g"],"id":15109}],[{"start":{"row":313,"column":19},"end":{"row":313,"column":20},"action":"insert","lines":["r"],"id":15110}],[{"start":{"row":313,"column":20},"end":{"row":313,"column":21},"action":"insert","lines":["a"],"id":15111}],[{"start":{"row":313,"column":21},"end":{"row":313,"column":22},"action":"insert","lines":["d"],"id":15112}],[{"start":{"row":313,"column":22},"end":{"row":313,"column":23},"action":"insert","lines":["e"],"id":15113}],[{"start":{"row":314,"column":15},"end":{"row":314,"column":16},"action":"remove","lines":["e"],"id":15114}],[{"start":{"row":314,"column":14},"end":{"row":314,"column":15},"action":"remove","lines":["n"],"id":15115}],[{"start":{"row":314,"column":13},"end":{"row":314,"column":14},"action":"remove","lines":["i"],"id":15116}],[{"start":{"row":314,"column":12},"end":{"row":314,"column":13},"action":"remove","lines":["m"],"id":15117}],[{"start":{"row":314,"column":12},"end":{"row":314,"column":13},"action":"insert","lines":["u"],"id":15118}],[{"start":{"row":314,"column":13},"end":{"row":314,"column":14},"action":"insert","lines":["p"],"id":15119}],[{"start":{"row":314,"column":14},"end":{"row":314,"column":15},"action":"insert","lines":["g"],"id":15120}],[{"start":{"row":314,"column":15},"end":{"row":314,"column":16},"action":"insert","lines":["r"],"id":15121}],[{"start":{"row":314,"column":16},"end":{"row":314,"column":17},"action":"insert","lines":["a"],"id":15122}],[{"start":{"row":314,"column":17},"end":{"row":314,"column":18},"action":"insert","lines":["d"],"id":15123}],[{"start":{"row":314,"column":18},"end":{"row":314,"column":19},"action":"insert","lines":["e"],"id":15124}]]},"ace":{"folds":[],"scrolltop":4816,"scrollleft":0,"selection":{"start":{"row":314,"column":19},"end":{"row":314,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":300,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1449419969684}